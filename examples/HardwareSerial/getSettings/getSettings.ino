// ПРИМЕР ПОЛУЧЕНИЯ НАСТРОЕК МОДУЛЯ:                                               //
                                                                                   //
#include <iarduino_Modbus.h>                                                       //   Подключаем библиотеку для работы по протоколу Modbus.
#include <iarduino_MB_TDS.h>                                                       //   Подключаем библиотеку для работы с TDS-метрами.
                                                                                   //
ModbusClient    modbus(Serial1, 2);                                                //   Создаём объект для работы по протоколу Modbus указывая объект шины UART-RS485 и вывод DE конвертера UART-RS485.
iarduino_MB_TDS sensor(modbus);                                                    //   Создаём объект для работы с TDS-метром указывая объект протокола Modbus.
                                                                                   //
void setup(){                                                                      //
     Serial.begin(9600); while(!Serial);                                           //   Инициируем передачу данных в монитор последовательного порта, указав его скорость.
     Serial1.begin(9600); while(!Serial1);                                         //   Инициируем работу с шиной UART-RS485 указав её скорость.
     modbus.begin();                                                               //   Инициируем работу по протоколу Modbus.
//   modbus.setTimeout(10);                                                        //   Указываем максимальное время ожидания ответа по протоколу Modbus.
//   modbus.setDelay(4);                                                           //   Указываем минимальный интервал между отправляемыми сообщениями по протоколу Modbus.
//   modbus.setTypeMB( MODBUS_RTU );                                               //   Указываем тип протокола Modbus: MODBUS_RTU (по умолчанию), или MODBUS_ASCII.
     sensor.begin(5);                                                              //   Инициируем работу с TDS-метром, указав его адрес. Если адрес не указан sensor.begin(), то он будет найден, но это займёт некоторое время.
//   sensor.setKt(0.02f);                                                          //   Указываем температурный коэффициент жидкости. Значение зависит от типа раствора. Используется для приведения S к EC. По умолчанию 0.02 = 2%.
//   sensor.setKp(0.5f);                                                           //   Указываем коэффициент пересчёта EC в TDS. Значение зависит от химического состава жидкости. Обычно применяют 0.5, 0.64 или 0.7. По умолчанию 0.5.
//   sensor.set_T(25);                                                             //   Указываем опорную температуру жидкости. Обычно используют 20°С или 25°С. По умолчанию 25°С.
                                                                                   //
//   Получаем параметры хранящиеся в энергонезависимой памяти модуля:              //
     int   f       = sensor.getFrequency();                                        //   Получаем частоту переменного тока используемого для измерений (50...5000 Гц).
     int   tds1    = sensor.getKnownTDS(1);                                        //   Получаем минерализацию 1 калибровочной жидкости (50...10'000 ppm).
     int   tds2    = sensor.getKnownTDS(2);                                        //   Получаем минерализацию 2 калибровочной жидкости (50...10'000 ppm).
     float ec1     = sensor.getKnownEC(1);                                         //   Получаем приведённую электропроводность 1 калибровочной жидкости (0,01...20'00 мСм/см).
     float ec2     = sensor.getKnownEC(2);                                         //   Получаем приведённую электропроводность 2 калибровочной жидкости (0,01...20'00 мСм/см).
     float Ka      = sensor.getKa();                                               //   Получаем множитель степенной функции (0,001...4'294'967,295) определяется при калибровке.
     float Kb      = sensor.getKb();                                               //   Получаем модуль степени степенной функции (0,001...65,535) определяется при калибровке.
     float flucMin = sensor.getFluctuation(STABLE_S);                              //   Получаем процент допустимой флуктуаций (0,1...100,0 %) при которых показания электропроводности считаются стабильными.
     float flucMax = sensor.getFluctuation(UNSTABLE_S);                            //   Получаем процент высокой флуктуаций (0,1...100,0 %) при которых показания электропроводности считаются не стабильными.
//   Получаем дополнительные параметры используемые в рассчётах:                   //
     float Kt      = sensor.getKt();                                               //   Получаем температурный коэффициент жидкости (0,0001...6,5535) зависит от типа раствора, используется для приведения S к EC.
     float Kp      = sensor.getKp();                                               //   Получаем коэффициент пересчёта EC в TDS (0,01...655,35) зависит от химического состава жидкости, обычно применяют 0.5, 0.64 или 0.7
     float t       = sensor.get_T();                                               //   Получаем опорную температуру жидкости (0,00...100,00), обычно используют 20°С или 25°С.
//   Получаем текущие значения напряжений:                                         //
     float Vsens   = sensor.getVsens();                                            //   Получаем напряжение на входе датчика при положительной полярности = 0,5Vcc...0,6Vcc ≈ 1,65...1,98 В.
     float Vo      = sensor.getVo();                                               //   Получаем напряжение виртуального 0 на входе ОУ = 0,5Vcc ≈ 1,65В.
     float Vout    = sensor.getVout();                                             //   Получаем напряжение на выходе ОУ = -Vsens R + Vo ( 1 + R ), где R = 4700 / сопротивление между выводами щупа.
                                                                                   //
//   Выводим параметры хранящиеся в энергонезависимой памяти модуля:               //
     Serial.println( (String) "F       = " +         f            + "Гц."     );   //   Частота переменного тока используемого для измерений.
     Serial.print  ( (String) "Aqua 1  = " +         tds1         + "ppm"     );   //   Минерализация 1 калибровочной жидкости.
     Serial.println( (String)        " = " + String( ec1    , 2 ) + "мСм/см." );   //   Приведённая электропроводность 1 калибровочной жидкости с 2 знаками после запятой.
     Serial.print  ( (String) "Aqua 2  = " +         tds2         + "ppm"     );   //   Минерализация 2 калибровочной жидкости.
     Serial.println( (String)        " = " + String( ec2    , 2 ) + "мСм/см." );   //   Приведённая электропроводность 2 калибровочной жидкости с 2 знаками после запятой.
     Serial.println( (String) "Ka      = " + String( Ka     , 3 ) + "."       );   //   Множитель степенной функции с 3 знаками после запятой.
     Serial.println( (String) "Kb      = " + String( Kb     , 3 ) + "."       );   //   Модуль степени степенной функции с 3 знаками после запятой.
     Serial.println( (String) "FlucMin = " + String( flucMin, 1 ) + "%."      );   //   Процент допустимой флуктуаций с 1 знаком после запятой.
     Serial.println( (String) "FlucMax = " + String( flucMax, 1 ) + "%.\r\n"  );   //   Процент высокой флуктуаций с 1 знаком после запятой.
//   Выводим дополнительные параметры используемые в рассчётах:                    //
     Serial.println( (String) "Kt      = " + String( Kt     , 4 ) + "."       );   //   Температурный коэффициент жидкости с 4 знаками после запятой.
     Serial.println( (String) "Kp      = " + String( Kp     , 2 ) + "."       );   //   Коэффициент пересчёта с 2 знаками после запятой.
     Serial.println( (String) "T       = " + String( t      , 2 ) + "*С.\r\n" );   //   Опорная температура жидкости с 2 знаками после запятой.
//   Выводим текущие значения напряжений:                                          //
     Serial.println( (String) "Vsens   = " + String( Vsens  , 4 ) + "В."      );   //   Напряжение на входе щупа при положительной полярности с 4 знаками после запятой.
     Serial.println( (String) "Vo      = " + String( Vo     , 4 ) + "В."      );   //   Напряжение виртуального 0 на входе ОУ с 4 знаками после запятой.
     Serial.println( (String) "Vout    = " + String( Vout   , 4 ) + "В.\r\n"  );   //   Напряжение на выходе ОУ с 4 знаками после запятой.
}                                                                                  //
                                                                                   //
void loop(){                                                                       //
}                                                                                  //